<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>akagenorobin</title><link>https://akagenorobin.github.io/</link><description>Recent content on akagenorobin</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Wed, 27 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://akagenorobin.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>MAU・DAU・ヘビーユーザ数の関係性を考察してみた</title><link>https://akagenorobin.github.io/post/2023-12-27/</link><pubDate>Wed, 27 Dec 2023 00:00:00 +0000</pubDate><guid>https://akagenorobin.github.io/post/2023-12-27/</guid><description>問題設定 あるサービスの月間のユーザ数(= MAU)を N 、1日のユーザ数(= DAU)を M とする。 このサービスを月間20日以上利用しているユーザ数（= ヘビーユーザ数）は？
という問題を考察したのでメモ。
考察 MAU に含まれるユーザで1ヶ月（30日としておく）のうち x 日利用する人の割合を P(x) とおく。 求めたいのは
$$\sum_{x=20}^{30} NP(x)$$
である。DAU に含まれるユーザで1ヶ月のうち x 日利用する人の数は
$$NP(x) \times \frac{x}{30}$$
よって DAU は
$$M = \sum_{x=1}^{30} NP(x) \times \frac{x}{30}$$
と表せて、ここから1ユーザあたりの利用日数の期待値が
$$E[x] = \sum_{x=1}^{30} xP(x) = 30\frac{M}{N} = 30R$$
となることがわかる（ただし R = M/N とおいた）。 これ割と非自明な結果だと思ったんですが自明ですかね🤔 （例えば DAU と MAU の比率が 1:4 だったら1ユーザが1ヶ月に利用する期間の期待値が1週間ということ）
というわけで、 DAU と MAU の値からは分布の期待値しか決まらないことがわかったので、ヘビーユーザの数を推定するには分布を仮定する必要がある。 簡単のために指数分布
$$P(x)=\lambda e^{-\lambda x}$$
を仮定しよう。指数分布の期待値は
$$E[x]=\frac{1}{\lambda}$$</description></item><item><title>ICFP-PC2022 参加記</title><link>https://akagenorobin.github.io/post/2022-09-20/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://akagenorobin.github.io/post/2022-09-20/</guid><description>今年も ICFP-PC にチーム chirijako で参加しました。 実は2017年から参加しているので、今年で6回目になります。 毎年楽しく参加させていただいています。
ICFP-PC とは 毎年開催されている72時間耐久のプログラミングコンテストです。
ICFP（国際関数型プログラミング学会）主催のコンテストですが、関数型言語に特化した問題が出るわけではなく、最近は割と普通のマラソンに近いです（過去にはラムダ計算を題材にした問題も出てましたが）。
一般的なコンテストと違うのは
プログラムを提出するわけではなく解を提出する → マシンリソースを自分で調達すれば計算時間にとらわれない、利用できる言語も自由 チーム人数が無制限 → 色んな役割の人をチームに入れられる の2点で、これによって何でもアリの楽しいコンテストになってます。
結果 17位でした。
前年の6位には及びませんでしたが、終了2時間前までは30位付近を彷徨っていたので、そう考えると良い成績なんじゃないかなと思います。
チームメンバー daiju：インフラ + ソルバー（ Rust ） omu：ビジュアライザ（ Rust ） sntea：ソルバー（ Rust ） 僕：ダッシュボード（ Typescript, Python ） 競プロガチ勢 の iwashi や nola_suz が抜けてソルバー書く人が不足してるんですが、助っ人として現れた sntea くんがつよつよで助かりました。
今年の問題 400x400 のエリアを分割 + 色塗りをしていって、目標の画像に近付けるという問題でした。
problem solution ただし分割や色塗りのコストがエリアが小さくなるほど高くなるような関数になっていて、如何に広いエリアを保ちつつ色を塗るかがポイントになる問題でした。
やったこと 事前準備 今年は Firebase 使おう！と決めていたので、アカウントの準備と、 Hosting Firestore Functions Authentication の素振りをしていました。
9/2(金) 問題読みつつ公式のシミュレータを使って手動解を書いたりするが辛くなってやめる 例年通り公式のスコアボードをハックしてランキングbotを作る 夜はしっかり寝る 9/3(土) 昼くらいにはダッシュボードにスコアが出るようになる omu シミュレータが動くようになっていたので画像を吐き出して imagemagick で gif にしてダッシュボードに組み込む sntea のグリーディー解と daiju の焼きなまし解でスコアを伸ばしていく submission をひたすらダッシュボードに反映する人間 CI と化す この日も夜はしっかり寝る 9/4(日) 継続的に人間 CI をやる ダッシュボードのコードを整えたり提出解を眺めたりする 色塗りが幾何平均になってコストが最適化されたり、 daiju がチェスボードを手動で解いたりする 公式のスコアボードにはチームごとの合計点しか出ていないが、APIでは問題ごとにスコアが返って来ていることに気付き、スコアボードを作る スコアボードを見た omu が今の方針じゃまずそうと気付き、大きなエリアで cut して color して merge みたいな手順が良さそう、と思い付く（ omu メソッドと呼ばれる） gitlab がタイミング悪くメンテナンスタイムに入ったりする この日も夜はしっかり寝る 9/5(月) 継続的に人間 CI をやる image と move のコストを分けて見たいという話になり、 omu シミュレータが吐き出したそれぞれのコストをダッシュボードに反映するようにする omu シミュレータを直すのに Rust を書くのに手こずったりする omu ビジュアライザ + omu メソッドで手動解を作る omu ビジュアライザで格子をマージする最適コストを探す 格子が切られている問題で格子をマージ + 前半の問題の解で解を作るスクリプトを書く 手動解で地道にスコアを上げていく 力作の手動解 daiju が omu メソッド + 探索のソルバーを書いたがスコア上がらず スコアボード凍結後に sntea の omu メソッド + DP のソルバーができあがりスコアが大幅に改善される 作ったもの レポジトリ https://gitlab.</description></item><item><title>ICFP-PC2019 参加記</title><link>https://akagenorobin.github.io/post/2019-07-12/</link><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid>https://akagenorobin.github.io/post/2019-07-12/</guid><description>今年も ICFP-PC に会社のチームで参加したので、参加記を書きます。
ICFP-PC とは 関数型プログラミング言語の国際学会 ICFP が主催する、チーム人数自由、言語も自由、な72時間耐久のプログラミングコンテストです。 僕は2017年の punter 、2018年の nanobot と参加して、今年が3回目になります。 今年は去年まで主戦力だったチームメイト2人が抜けてしまったため、去年までのチーム名である chirimenjako(ちりめんじゃこ) から h(飛車) と k(角) を抜いた cirimenjao(しりめんじゃお？) として参加しました。
今年の問題 二次元のマップ上を worker-wrapper というロボットが色を塗っていく、という問題でした。 マップ上にはブースターというアイテムが配置されており、それらを上手く使いこなして短時間で全域を塗りつぶすことが求められています。
ICFP-PC お馴染みの追加課題では、特定の条件に合うマップを作成するパズルと呼ばれる問題も出題されました。 僕は AI 部分にはあまり関わっていないので、詳細はチームメイトの記事に委ねます。
作ったもの 出来上がった AI を実行するインフラの作成、現在のランキングを通知する Slackbot の作成、今までのスコアの一覧を見れるようにするダッシュボードの作成、今までのベストスコアの解答を集めて提出するプログラムの作成、なんかをやってました。 色々作れて楽しかった～という感想ですが、割と去年と同じ感じのものを作っていたので、ちゃんと準備しておけばもっと色々やれたんじゃないか、という反省もあります。
AI 実行環境 以下の様な構成で CI を構築しました。
流れとしては以下のようになっています。
AI 開発者が Gitlab に コードを push gitlab-ci がそれを検知し gitlab-runner に投げる gitlab-runner がコードを zip 化し、300問分のタスクをキューに投げる 各ワーカがタスクを処理し結果を S3 に置く キューイングの部分は昨年チームメイトが作ったのを真似して celery と subprocess で書きました。 工夫した点としては
パイプラインの部分は別のメンバーが作ってくれていたので、 gitlab-runner からはスクリプトを一発実行するだけでタスクが飛ぶようにした celery は json エンコード可能な引数しか渡せない（頑張れば pickle とかも渡せる）のでプログラムは S3 に上げてワーカで落としてくるようにした 元々各タスク内でコンパイルしていたのをワーカ単位で最初の1回のみコンパイルするようにしたら飛躍的に速くなった などです。 普段業務で使い慣れている ElastiCache の redis を celery のバックエンドに使ったら、 AWS の利用料金が $39 くらいになってビビりました（2日目途中くらいに気付いて EC2 に切り替えました）。 下記を参考にしました。</description></item><item><title>About Me</title><link>https://akagenorobin.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://akagenorobin.github.io/about/</guid><description>学歴 2008年4月〜2012年3月 大阪大学理学部物理学科 2012年4月〜2015年3月 大阪大学大学院理学研究科物理学専攻 菊池研究室所属 だらだら研究していたので修士は3年かかりました ざっくり言うと統計物理の数理モデルに関する研究をしていました 職歴 2015年4月〜 株式会社いい生活 新卒で入社して主にバックエンドの実装・設計・運用を担当 2019年からはエンジニアリングマネージャーとしてチームビルディングに携わっています 2021年にはプロダクトオーナーとして新規サービスの立ち上げを主導 現在はサービス開発から採用・教育まで幅広く活躍中 利用言語 日本語 母語話者です 英語 日常会話レベル フランス語 趣味でやっていました。簡単な単語と文法ならわかるレベル チェコ語 絶賛学習中。2歳児レベル Python プログラミング言語としては最も触った時間が長く、一番流暢に書ける言語です Ruby 昔好きだった言語。 Rails アプリを趣味で運用していたこともあります Typescript 最近比較的よく触っている言語で、 Lambda ・ Firebase Functions ・ React などを書きます Rust ちゃんと書けるとは言い難いですが、書いてて楽しいなと思う言語です 好きなこと チームで1つの目的に向かって行動すること 特にメンバーが個々の個性を活かし、それぞれの役割を全うしているようなチームを好みます いわゆる馴れ合い・惰性・上辺の関係と言ったもので成り立っているチームは好みません サービス開発 特に「良いサービスとは」を考えること、自分が関わったサービスをユーザが使ってくれている様子を眺めること 一貫性があること どちらかと言うと一貫性がないことが嫌いかも 遊び心 「仕事は楽しく遊びは真剣に」をモットーにしています 戦うこと・勝ちにこだわること 勝敗そのものというよりは、勝つために全力を尽くすこと、また、それに全力を尽くしている人間同士がぶつかり合うこと、は美しいという価値観を持っています 異質な個性が化学反応して良いものが生まれること チームプレーの魅力はここにあると思っています 一見関係ないと思われる物事を関連付けること 統計物理の本質的な面白さはそういう部分にあると思っています いわゆる人間らしい有機的な物事 作品そのものよりもその作者の方を好きになりがち 得意なこと 考えること・多面的なものの見方ができること 特に事象を抽象化して汎化すること、データから推論すること、何かを判断するためのもっともらしいロジックを組み立てること 人間観察 人の言動から思考や特徴をある程度トレースして、どういう立ち位置が向いているかを考えるのは得意だと思います 信頼を得ること 価値観に優劣を付けないことを基本思想としているのと、フラットに接するので、ある程度人の信頼を得やすいです チームビルディング 自分がリーダーをやる際は各メンバーが能動的にやりたいことができるような環境を目指します マネージャーはやりたい訳ではないけど、消去法で得意かなと思っています ただし受動的な人を積極的に指導したりはせず、見捨てがちです どちらかと言うとプロデューサーという表現の方がしっくり来ています 参考記事 物理学専攻出身のITエンジニアが、チーム開発にもたらす価値とは？ 2017年に受けたインタビューの記事です 仲介ソリューション本部インタビュー【いい生活 本部インタビュー第3回】 2023年に受けたインタビューの記事です コンテスト ICFP-PC 2017年 chirimenjako 失格 2018年 chirimenjako 15位 2019年 cirimenjao 37位 参加記 2020年 cirijako 35位 2021年 chirijako 6位 2022年 chirijako 17位 参加記 2023年 chirijako 15位 ISUCON その他 Sing Band 趣味でやっているアコースティックバンド。鍵盤を弾いています。最近は活動してないです AWS as a complex system おかくんがやっているポッドキャスト interaxion に呼ばれて出演しました</description></item></channel></rss>